def accommodate_new_pets(hotel_capacity,max_weight,*args):
    result = ''

    dictionary_of_accommodated_pets= {}
    list_of_pets = []

    for arg in args:
        current_pet,current_weight = arg
        list_of_pets.append(arg)

        if hotel_capacity:
            if current_weight <= max_weight:
                if current_pet in dictionary_of_accommodated_pets:
                    dictionary_of_accommodated_pets[current_pet] += 1
                else:
                    dictionary_of_accommodated_pets[current_pet] =1
                hotel_capacity -= 1
            list_of_pets.remove(arg)

    sorted_result = sorted(
        dictionary_of_accommodated_pets.items(),
        key=lambda kvp: (kvp[0])
    )

    for key,value in sorted_result:
        result += f'{key}: {value}'+ '\n'

    if not list_of_pets:
        return f"All pets are accommodated! Available capacity: {hotel_capacity}.\nAccommodated pets:\n" \
               f"{result}"
    else:
        return f'You did not manage to accommodate all pets!\nAccommodated pets:\n{result}'


print(accommodate_new_pets(
    10,
    10.0,
    ("cat", 5.8),
    ("dog", 10.5),
    ("parrot", 0.8),
    ("cat", 3.1),
))

print(accommodate_new_pets(
    10,
    15.0,
    ("cat", 5.8),
    ("dog", 10.0),
))

print(accommodate_new_pets(
    2,
    15.0,
    ("dog", 10.0),
    ("cat", 5.8),
    ("cat", 2.7),
))
